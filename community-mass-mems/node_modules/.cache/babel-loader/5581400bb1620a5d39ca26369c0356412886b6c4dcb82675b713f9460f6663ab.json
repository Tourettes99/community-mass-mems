{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\isman\\\\Documents\\\\community-mass-mems\\\\community-mass-mems\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\nimport { CssBaseline, Container, Snackbar, Alert } from '@mui/material';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport { useTheme } from './contexts/ThemeContext';\nimport { getTheme } from './theme';\nimport MemoryGrid from './components/MemoryGrid';\nimport IntroDialog from './components/IntroDialog';\nimport InfoBar from './components/InfoBar';\nimport PatreonBar from './components/PatreonBar';\nimport ThemeToggle from './components/ThemeToggle';\nimport UploadBar from './components/UploadBar';\nimport useMemoryStore from './stores/memoryStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContent = () => {\n  _s();\n  const {\n    mode\n  } = useTheme();\n  const theme = getTheme(mode);\n\n  // Initialize intro dialog state\n  const [showIntro, setShowIntro] = useState(() => {\n    try {\n      return localStorage.getItem('introShown') !== 'true';\n    } catch {\n      return true;\n    }\n  });\n  const handleCloseIntro = () => {\n    setShowIntro(false);\n    try {\n      localStorage.setItem('introShown', 'true');\n    } catch {\n      console.warn('Failed to save intro state to localStorage');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PatreonBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeToggle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MemoryGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IntroDialog, {\n        open: showIntro,\n        onClose: handleCloseIntro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContent, \"K5r46syeGXIe1EVaJOD5RXWF83Q=\", false, function () {\n  return [useTheme];\n});\n_c = AppContent;\nconst App = () => {\n  _s2();\n  const addMemories = useMemoryStore(state => state.addMemories);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const handleUpload = async (type, content, tags) => {\n    try {\n      const response = await fetch('/.netlify/functions/uploadUrl', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          type,\n          url: type === 'url' ? content : undefined,\n          content: type === 'text' ? content : undefined,\n          tags\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to upload memory');\n      }\n      const newMemory = await response.json();\n      addMemories([newMemory]);\n      setSuccess(true);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to upload memory');\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: [/*#__PURE__*/_jsxDEV(UploadBar, {\n      onUpload: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(null),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setError(null),\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: success,\n      autoHideDuration: 6000,\n      onClose: () => setSuccess(false),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSuccess(false),\n        severity: \"success\",\n        children: \"Memory uploaded successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"ZuXVa+7ewMuHc4hND+SGGrctodI=\", false, function () {\n  return [useMemoryStore];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","ThemeProvider","MuiThemeProvider","CssBaseline","Container","Snackbar","Alert","useTheme","getTheme","MemoryGrid","IntroDialog","InfoBar","PatreonBar","ThemeToggle","UploadBar","useMemoryStore","jsxDEV","_jsxDEV","AppContent","_s","mode","theme","showIntro","setShowIntro","localStorage","getItem","handleCloseIntro","setItem","console","warn","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","py","open","onClose","_c","App","_s2","addMemories","state","error","setError","success","setSuccess","handleUpload","type","content","tags","response","fetch","method","headers","body","JSON","stringify","url","undefined","ok","errorData","json","Error","message","newMemory","err","onUpload","autoHideDuration","anchorOrigin","vertical","horizontal","severity","_c2","$RefreshReg$"],"sources":["c:/Users/isman/Documents/community-mass-mems/community-mass-mems/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\nimport { CssBaseline, Container, Snackbar, Alert } from '@mui/material';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport { useTheme } from './contexts/ThemeContext';\nimport { getTheme } from './theme';\nimport MemoryGrid from './components/MemoryGrid';\nimport IntroDialog from './components/IntroDialog';\nimport InfoBar from './components/InfoBar';\nimport PatreonBar from './components/PatreonBar';\nimport ThemeToggle from './components/ThemeToggle';\nimport UploadBar from './components/UploadBar';\nimport useMemoryStore from './stores/memoryStore';\n\nconst AppContent = () => {\n  const { mode } = useTheme();\n  const theme = getTheme(mode);\n  \n  // Initialize intro dialog state\n  const [showIntro, setShowIntro] = useState(() => {\n    try {\n      return localStorage.getItem('introShown') !== 'true';\n    } catch {\n      return true;\n    }\n  });\n\n  const handleCloseIntro = () => {\n    setShowIntro(false);\n    try {\n      localStorage.setItem('introShown', 'true');\n    } catch {\n      console.warn('Failed to save intro state to localStorage');\n    }\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <InfoBar />\n        <PatreonBar />\n        <ThemeToggle />\n        <MemoryGrid />\n        <IntroDialog open={showIntro} onClose={handleCloseIntro} />\n      </Container>\n    </MuiThemeProvider>\n  );\n};\n\nconst App = () => {\n  const addMemories = useMemoryStore(state => state.addMemories);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState(false);\n\n  const handleUpload = async (type: string, content: string, tags: string[]) => {\n    try {\n      const response = await fetch('/.netlify/functions/uploadUrl', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          type,\n          url: type === 'url' ? content : undefined,\n          content: type === 'text' ? content : undefined,\n          tags\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to upload memory');\n      }\n\n      const newMemory = await response.json();\n      addMemories([newMemory]);\n      setSuccess(true);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to upload memory');\n      throw err;\n    }\n  };\n\n  return (\n    <ThemeProvider>\n      <UploadBar onUpload={handleUpload} />\n      <AppContent />\n      <Snackbar \n        open={!!error} \n        autoHideDuration={6000} \n        onClose={() => setError(null)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setError(null)} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={success}\n        autoHideDuration={6000}\n        onClose={() => setSuccess(false)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setSuccess(false)} severity=\"success\">\n          Memory uploaded successfully!\n        </Alert>\n      </Snackbar>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,gBAAgB,QAAQ,sBAAsB;AACxE,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AACvE,SAASL,aAAa,QAAQ,yBAAyB;AACvD,SAASM,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,QAAQ,QAAQ,SAAS;AAClC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,cAAc,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAK,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAC3B,MAAMc,KAAK,GAAGb,QAAQ,CAACY,IAAI,CAAC;;EAE5B;EACA,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,MAAM;IAC/C,IAAI;MACF,OAAOwB,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;IACtD,CAAC,CAAC,MAAM;MACN,OAAO,IAAI;IACb;EACF,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,YAAY,CAAC,KAAK,CAAC;IACnB,IAAI;MACFC,YAAY,CAACG,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;IAC5C,CAAC,CAAC,MAAM;MACNC,OAAO,CAACC,IAAI,CAAC,4CAA4C,CAAC;IAC5D;EACF,CAAC;EAED,oBACEZ,OAAA,CAACf,gBAAgB;IAACmB,KAAK,EAAEA,KAAM;IAAAS,QAAA,gBAC7Bb,OAAA,CAACd,WAAW;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfjB,OAAA,CAACb,SAAS;MAAC+B,QAAQ,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAP,QAAA,gBACrCb,OAAA,CAACN,OAAO;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXjB,OAAA,CAACL,UAAU;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdjB,OAAA,CAACJ,WAAW;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACfjB,OAAA,CAACR,UAAU;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdjB,OAAA,CAACP,WAAW;QAAC4B,IAAI,EAAEhB,SAAU;QAACiB,OAAO,EAAEb;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEvB,CAAC;AAACf,EAAA,CAlCID,UAAU;EAAA,QACGX,QAAQ;AAAA;AAAAiC,EAAA,GADrBtB,UAAU;AAoChB,MAAMuB,GAAG,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChB,MAAMC,WAAW,GAAG5B,cAAc,CAAC6B,KAAK,IAAIA,KAAK,CAACD,WAAW,CAAC;EAC9D,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAG9C,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAAC+C,OAAO,EAAEC,UAAU,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMiD,YAAY,GAAG,MAAAA,CAAOC,IAAY,EAAEC,OAAe,EAAEC,IAAc,KAAK;IAC5E,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBT,IAAI;UACJU,GAAG,EAAEV,IAAI,KAAK,KAAK,GAAGC,OAAO,GAAGU,SAAS;UACzCV,OAAO,EAAED,IAAI,KAAK,MAAM,GAAGC,OAAO,GAAGU,SAAS;UAC9CT;QACF,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,yBAAyB,CAAC;MACjE;MAEA,MAAMC,SAAS,GAAG,MAAMd,QAAQ,CAACW,IAAI,CAAC,CAAC;MACvCrB,WAAW,CAAC,CAACwB,SAAS,CAAC,CAAC;MACxBnB,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACZtB,QAAQ,CAACsB,GAAG,YAAYH,KAAK,GAAGG,GAAG,CAACF,OAAO,GAAG,yBAAyB,CAAC;MACxE,MAAME,GAAG;IACX;EACF,CAAC;EAED,oBACEnD,OAAA,CAAChB,aAAa;IAAA6B,QAAA,gBACZb,OAAA,CAACH,SAAS;MAACuD,QAAQ,EAAEpB;IAAa;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCjB,OAAA,CAACC,UAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdjB,OAAA,CAACZ,QAAQ;MACPiC,IAAI,EAAE,CAAC,CAACO,KAAM;MACdyB,gBAAgB,EAAE,IAAK;MACvB/B,OAAO,EAAEA,CAAA,KAAMO,QAAQ,CAAC,IAAI,CAAE;MAC9ByB,YAAY,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAA3C,QAAA,eAE3Db,OAAA,CAACX,KAAK;QAACiC,OAAO,EAAEA,CAAA,KAAMO,QAAQ,CAAC,IAAI,CAAE;QAAC4B,QAAQ,EAAC,OAAO;QAAA5C,QAAA,EACnDe;MAAK;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACXjB,OAAA,CAACZ,QAAQ;MACPiC,IAAI,EAAES,OAAQ;MACduB,gBAAgB,EAAE,IAAK;MACvB/B,OAAO,EAAEA,CAAA,KAAMS,UAAU,CAAC,KAAK,CAAE;MACjCuB,YAAY,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAA3C,QAAA,eAE3Db,OAAA,CAACX,KAAK;QAACiC,OAAO,EAAEA,CAAA,KAAMS,UAAU,CAAC,KAAK,CAAE;QAAC0B,QAAQ,EAAC,SAAS;QAAA5C,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEpB,CAAC;AAAAQ,GAAA,CA5DKD,GAAG;EAAA,QACa1B,cAAc;AAAA;AAAA4D,GAAA,GAD9BlC,GAAG;AA8DT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAmC,GAAA;AAAAC,YAAA,CAAApC,EAAA;AAAAoC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}