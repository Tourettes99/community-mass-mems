{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\isman\\\\Documents\\\\community-mass-mems\\\\community-mass-mems\\\\src\\\\components\\\\MemoryCard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Card, CardContent, Typography, Box, Chip, IconButton } from '@mui/material';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ThumbDownIcon from '@mui/icons-material/ThumbDown';\nimport useMemoryStore from '../stores/memoryStore';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MemoryCard = ({\n  memory,\n  selectedTags,\n  onTagClick\n}) => {\n  _s();\n  var _memory$tags, _memory$metadata15, _memory$votes, _memory$votes2;\n  const updateMemory = useMemoryStore(state => state.updateMemory);\n  const [userVote, setUserVote] = React.useState(localStorage.getItem(`vote_${memory.id || memory._id}`));\n  const [faviconError, setFaviconError] = React.useState(false);\n  const isValidUrl = urlString => {\n    try {\n      const url = new URL(urlString);\n      return url.protocol === 'http:' || url.protocol === 'https:';\n    } catch {\n      return false;\n    }\n  };\n  const handleFaviconError = () => {\n    setFaviconError(true);\n  };\n  const handleVote = async type => {\n    try {\n      let userId = localStorage.getItem('userId');\n      if (!userId) {\n        userId = 'user_' + Math.random().toString(36).substr(2, 9);\n        localStorage.setItem('userId', userId);\n      }\n      const response = await fetch('/.netlify/functions/vote-memory', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          memoryId: memory.id || memory._id,\n          voteType: type,\n          userId\n        })\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to vote');\n      }\n      const result = await response.json();\n      const {\n        votes,\n        userVote,\n        userVotes\n      } = result;\n      if (userVote) {\n        localStorage.setItem(`vote_${memory.id || memory._id}`, userVote);\n      } else {\n        localStorage.removeItem(`vote_${memory.id || memory._id}`);\n      }\n      setUserVote(userVote);\n\n      // Create updated memory with new votes while preserving all other properties\n      const updatedMemory = {\n        ...memory,\n        id: memory.id || memory._id,\n        // Ensure we have a consistent ID\n        votes: {\n          ...votes\n        },\n        userVotes: new Map(Object.entries(userVotes || {}))\n      };\n\n      // Update the memory in the store\n      updateMemory(updatedMemory);\n    } catch (error) {\n      console.error('Error voting:', error);\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'No date available';\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) {\n        console.warn('Invalid date string:', dateString);\n        return 'Invalid date';\n      }\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    } catch (error) {\n      console.error('Error formatting date:', error, dateString);\n      return 'Invalid date';\n    }\n  };\n  const renderContent = () => {\n    var _memory$metadata, _memory$metadata2, _memory$metadata3, _memory$metadata$ogIm2, _memory$metadata8, _memory$metadata9, _memory$metadata$titl5, _memory$metadata13, _memory$metadata$desc2, _memory$metadata14;\n    const title = ((_memory$metadata = memory.metadata) === null || _memory$metadata === void 0 ? void 0 : _memory$metadata.title) || memory.url || 'No title';\n    const showFavicon = ((_memory$metadata2 = memory.metadata) === null || _memory$metadata2 === void 0 ? void 0 : _memory$metadata2.favicon) && isValidUrl(memory.metadata.favicon) && !faviconError;\n    const renderFavicon = showFavicon && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: (_memory$metadata3 = memory.metadata) === null || _memory$metadata3 === void 0 ? void 0 : _memory$metadata3.favicon,\n      alt: \"\",\n      onError: handleFaviconError,\n      style: {\n        width: 16,\n        height: 16,\n        objectFit: 'contain',\n        marginRight: 8,\n        flexShrink: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n    if (!memory.url) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 1\n          },\n          children: [renderFavicon, /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          children: memory.content || 'No content available'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    // Handle YouTube videos\n    const isYouTube = memory.url.includes('youtube.com') || memory.url.includes('youtu.be');\n    if (isYouTube) {\n      var _memory$url$split$, _memory$url$split$2;\n      const videoId = memory.url.includes('youtube.com') ? (_memory$url$split$ = memory.url.split('v=')[1]) === null || _memory$url$split$ === void 0 ? void 0 : _memory$url$split$.split('&')[0] : (_memory$url$split$2 = memory.url.split('youtu.be/')[1]) === null || _memory$url$split$2 === void 0 ? void 0 : _memory$url$split$2.split('?')[0];\n      if (videoId) {\n        var _memory$metadata$titl, _memory$metadata4;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 1\n            },\n            children: [renderFavicon, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'relative',\n              paddingTop: '56.25%',\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              style: {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                border: 'none'\n              },\n              src: `https://www.youtube.com/embed/${videoId}`,\n              title: (_memory$metadata$titl = (_memory$metadata4 = memory.metadata) === null || _memory$metadata4 === void 0 ? void 0 : _memory$metadata4.title) !== null && _memory$metadata$titl !== void 0 ? _memory$metadata$titl : 'YouTube video',\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n    }\n\n    // Handle direct file links\n    const isDirectFile = /\\.(jpeg|jpg|gif|png|webp)$/i.test(memory.url);\n    if (isDirectFile) {\n      var _memory$metadata$titl2, _memory$metadata5;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 1\n          },\n          children: [renderFavicon, /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"img\",\n          src: memory.url,\n          alt: (_memory$metadata$titl2 = (_memory$metadata5 = memory.metadata) === null || _memory$metadata5 === void 0 ? void 0 : _memory$metadata5.title) !== null && _memory$metadata$titl2 !== void 0 ? _memory$metadata$titl2 : 'Image',\n          sx: {\n            width: '100%',\n            height: 'auto',\n            maxHeight: '300px',\n            objectFit: 'contain',\n            borderRadius: 1\n          },\n          onError: e => {\n            var _ref, _memory$metadata$ogIm, _memory$metadata6, _memory$metadata7;\n            e.currentTarget.src = (_ref = (_memory$metadata$ogIm = (_memory$metadata6 = memory.metadata) === null || _memory$metadata6 === void 0 ? void 0 : _memory$metadata6.ogImage) !== null && _memory$metadata$ogIm !== void 0 ? _memory$metadata$ogIm : (_memory$metadata7 = memory.metadata) === null || _memory$metadata7 === void 0 ? void 0 : _memory$metadata7.twitterImage) !== null && _ref !== void 0 ? _ref : '/placeholder.png';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    // Handle other URLs with thumbnails\n    const thumbnail = (_memory$metadata$ogIm2 = (_memory$metadata8 = memory.metadata) === null || _memory$metadata8 === void 0 ? void 0 : _memory$metadata8.ogImage) !== null && _memory$metadata$ogIm2 !== void 0 ? _memory$metadata$ogIm2 : (_memory$metadata9 = memory.metadata) === null || _memory$metadata9 === void 0 ? void 0 : _memory$metadata9.twitterImage;\n    if (thumbnail) {\n      var _memory$metadata$titl3, _memory$metadata10, _memory$metadata$titl4, _memory$metadata11, _memory$metadata$desc, _memory$metadata12;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 1\n          },\n          children: [renderFavicon, /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"a\",\n          href: memory.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          sx: {\n            display: 'block',\n            textDecoration: 'none',\n            color: 'inherit'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            component: \"img\",\n            src: thumbnail,\n            alt: (_memory$metadata$titl3 = (_memory$metadata10 = memory.metadata) === null || _memory$metadata10 === void 0 ? void 0 : _memory$metadata10.title) !== null && _memory$metadata$titl3 !== void 0 ? _memory$metadata$titl3 : 'Thumbnail',\n            sx: {\n              width: '100%',\n              height: 'auto',\n              maxHeight: '300px',\n              objectFit: 'contain',\n              borderRadius: 1\n            },\n            onError: e => {\n              e.currentTarget.src = '/placeholder.png';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mt: 1\n            },\n            children: (_memory$metadata$titl4 = (_memory$metadata11 = memory.metadata) === null || _memory$metadata11 === void 0 ? void 0 : _memory$metadata11.title) !== null && _memory$metadata$titl4 !== void 0 ? _memory$metadata$titl4 : memory.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              mt: 0.5\n            },\n            children: (_memory$metadata$desc = (_memory$metadata12 = memory.metadata) === null || _memory$metadata12 === void 0 ? void 0 : _memory$metadata12.description) !== null && _memory$metadata$desc !== void 0 ? _memory$metadata$desc : 'No description available'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    // Fallback for other content\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 1\n        },\n        children: [renderFavicon, /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"a\",\n        href: memory.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        sx: {\n          display: 'block',\n          textDecoration: 'none',\n          color: 'inherit'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: (_memory$metadata$titl5 = (_memory$metadata13 = memory.metadata) === null || _memory$metadata13 === void 0 ? void 0 : _memory$metadata13.title) !== null && _memory$metadata$titl5 !== void 0 ? _memory$metadata$titl5 : memory.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 1\n          },\n          children: (_memory$metadata$desc2 = (_memory$metadata14 = memory.metadata) === null || _memory$metadata14 === void 0 ? void 0 : _memory$metadata14.description) !== null && _memory$metadata$desc2 !== void 0 ? _memory$metadata$desc2 : 'No description available'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        flexGrow: 1\n      },\n      children: [renderContent(), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 1\n        },\n        children: (_memory$tags = memory.tags) === null || _memory$tags === void 0 ? void 0 : _memory$tags.map(tag => /*#__PURE__*/_jsxDEV(Chip, {\n          label: tag,\n          size: \"small\",\n          sx: {\n            backgroundColor: 'rgba(255, 87, 34, 0.1)',\n            color: '#ff5722',\n            '&:hover': {\n              backgroundColor: 'rgba(255, 87, 34, 0.2)'\n            }\n          }\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"text.secondary\",\n        sx: {\n          mt: 2,\n          display: 'block'\n        },\n        children: [\"Created: \", formatDate((_memory$metadata15 = memory.metadata) === null || _memory$metadata15 === void 0 ? void 0 : _memory$metadata15.createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        justifyContent: 'space-between',\n        px: 2,\n        pb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => handleVote('up'),\n          color: userVote === 'up' ? 'primary' : 'default',\n          children: /*#__PURE__*/_jsxDEV(ThumbUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: ((_memory$votes = memory.votes) === null || _memory$votes === void 0 ? void 0 : _memory$votes.up) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => handleVote('down'),\n          color: userVote === 'down' ? 'primary' : 'default',\n          children: /*#__PURE__*/_jsxDEV(ThumbDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: ((_memory$votes2 = memory.votes) === null || _memory$votes2 === void 0 ? void 0 : _memory$votes2.down) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoryCard, \"GoPF2ATud1tHyl0CTSLe1x8blEg=\", false, function () {\n  return [useMemoryStore];\n});\n_c = MemoryCard;\nexport default MemoryCard;\nvar _c;\n$RefreshReg$(_c, \"MemoryCard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Box","Chip","IconButton","ThumbUpIcon","ThumbDownIcon","useMemoryStore","jsxDEV","_jsxDEV","Fragment","_Fragment","MemoryCard","memory","selectedTags","onTagClick","_s","_memory$tags","_memory$metadata15","_memory$votes","_memory$votes2","updateMemory","state","userVote","setUserVote","useState","localStorage","getItem","id","_id","faviconError","setFaviconError","isValidUrl","urlString","url","URL","protocol","handleFaviconError","handleVote","type","userId","Math","random","toString","substr","setItem","response","fetch","method","headers","body","JSON","stringify","memoryId","voteType","ok","error","json","Error","message","result","votes","userVotes","removeItem","updatedMemory","Map","Object","entries","console","formatDate","dateString","date","Date","isNaN","getTime","warn","Intl","DateTimeFormat","year","month","day","hour","minute","format","renderContent","_memory$metadata","_memory$metadata2","_memory$metadata3","_memory$metadata$ogIm2","_memory$metadata8","_memory$metadata9","_memory$metadata$titl5","_memory$metadata13","_memory$metadata$desc2","_memory$metadata14","title","metadata","showFavicon","favicon","renderFavicon","src","alt","onError","style","width","height","objectFit","marginRight","flexShrink","fileName","_jsxFileName","lineNumber","columnNumber","children","sx","display","alignItems","mb","variant","color","content","isYouTube","includes","_memory$url$split$","_memory$url$split$2","videoId","split","_memory$metadata$titl","_memory$metadata4","position","paddingTop","top","left","border","allow","allowFullScreen","isDirectFile","test","_memory$metadata$titl2","_memory$metadata5","component","maxHeight","borderRadius","e","_ref","_memory$metadata$ogIm","_memory$metadata6","_memory$metadata7","currentTarget","ogImage","twitterImage","thumbnail","_memory$metadata$titl3","_memory$metadata10","_memory$metadata$titl4","_memory$metadata11","_memory$metadata$desc","_memory$metadata12","href","target","rel","textDecoration","mt","description","flexDirection","flexGrow","flexWrap","gap","tags","map","tag","label","size","backgroundColor","createdAt","justifyContent","px","pb","onClick","up","down","_c","$RefreshReg$"],"sources":["c:/Users/isman/Documents/community-mass-mems/community-mass-mems/src/components/MemoryCard.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Box,\n  Chip,\n  IconButton,\n} from '@mui/material';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ThumbDownIcon from '@mui/icons-material/ThumbDown';\nimport { Memory } from '../types/Memory';\nimport useMemoryStore from '../stores/memoryStore';\n\ninterface MemoryCardProps {\n  memory: Memory;\n  selectedTags: string[];\n  onTagClick: (tag: string) => void;\n}\n\nconst MemoryCard: React.FC<MemoryCardProps> = ({ memory, selectedTags, onTagClick }) => {\n  const updateMemory = useMemoryStore(state => state.updateMemory);\n  const [userVote, setUserVote] = React.useState<string | null>(\n    localStorage.getItem(`vote_${memory.id || memory._id}`)\n  );\n  const [faviconError, setFaviconError] = React.useState(false);\n\n  const isValidUrl = (urlString: string): boolean => {\n    try {\n      const url = new URL(urlString);\n      return url.protocol === 'http:' || url.protocol === 'https:';\n    } catch {\n      return false;\n    }\n  };\n\n  const handleFaviconError = () => {\n    setFaviconError(true);\n  };\n\n  const handleVote = async (type: 'up' | 'down') => {\n    try {\n      let userId = localStorage.getItem('userId');\n      if (!userId) {\n        userId = 'user_' + Math.random().toString(36).substr(2, 9);\n        localStorage.setItem('userId', userId);\n      }\n\n      const response = await fetch('/.netlify/functions/vote-memory', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          memoryId: memory.id || memory._id,\n          voteType: type,\n          userId\n        }),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to vote');\n      }\n\n      const result = await response.json();\n      const { votes, userVote, userVotes } = result;\n      \n      if (userVote) {\n        localStorage.setItem(`vote_${memory.id || memory._id}`, userVote);\n      } else {\n        localStorage.removeItem(`vote_${memory.id || memory._id}`);\n      }\n      \n      setUserVote(userVote);\n      \n      // Create updated memory with new votes while preserving all other properties\n      const updatedMemory: Memory = {\n        ...memory,\n        id: memory.id || memory._id, // Ensure we have a consistent ID\n        votes: { ...votes },\n        userVotes: new Map(Object.entries(userVotes || {}))\n      };\n\n      // Update the memory in the store\n      updateMemory(updatedMemory);\n    } catch (error) {\n      console.error('Error voting:', error);\n    }\n  };\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return 'No date available';\n    \n    try {\n      const date = new Date(dateString);\n      \n      if (isNaN(date.getTime())) {\n        console.warn('Invalid date string:', dateString);\n        return 'Invalid date';\n      }\n\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    } catch (error) {\n      console.error('Error formatting date:', error, dateString);\n      return 'Invalid date';\n    }\n  };\n\n  const renderContent = () => {\n    const title = memory.metadata?.title || memory.url || 'No title';\n    const showFavicon = memory.metadata?.favicon && \n      isValidUrl(memory.metadata.favicon) && \n      !faviconError;\n\n    const renderFavicon = showFavicon && (\n      <img \n        src={memory.metadata?.favicon}\n        alt=\"\"\n        onError={handleFaviconError}\n        style={{ \n          width: 16, \n          height: 16, \n          objectFit: 'contain',\n          marginRight: 8,\n          flexShrink: 0\n        }} \n      />\n    );\n\n    if (!memory.url) {\n      return (\n        <>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n            {renderFavicon}\n            <Typography variant=\"subtitle1\">\n              {title}\n            </Typography>\n          </Box>\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            {memory.content || 'No content available'}\n          </Typography>\n        </>\n      );\n    }\n\n    // Handle YouTube videos\n    const isYouTube = memory.url.includes('youtube.com') || memory.url.includes('youtu.be');\n    if (isYouTube) {\n      const videoId = memory.url.includes('youtube.com') \n        ? memory.url.split('v=')[1]?.split('&')[0]\n        : memory.url.split('youtu.be/')[1]?.split('?')[0];\n        \n      if (videoId) {\n        return (\n          <>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              {renderFavicon}\n              <Typography variant=\"subtitle1\">\n                {title}\n              </Typography>\n            </Box>\n            <Box sx={{ position: 'relative', paddingTop: '56.25%', width: '100%' }}>\n              <iframe\n                style={{\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  width: '100%',\n                  height: '100%',\n                  border: 'none'\n                }}\n                src={`https://www.youtube.com/embed/${videoId}`}\n                title={memory.metadata?.title ?? 'YouTube video'}\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </Box>\n          </>\n        );\n      }\n    }\n\n    // Handle direct file links\n    const isDirectFile = /\\.(jpeg|jpg|gif|png|webp)$/i.test(memory.url);\n    if (isDirectFile) {\n      return (\n        <>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n            {renderFavicon}\n            <Typography variant=\"subtitle1\">\n              {title}\n            </Typography>\n          </Box>\n          <Box \n            component=\"img\"\n            src={memory.url}\n            alt={memory.metadata?.title ?? 'Image'}\n            sx={{\n              width: '100%',\n              height: 'auto',\n              maxHeight: '300px',\n              objectFit: 'contain',\n              borderRadius: 1\n            }}\n            onError={(e: React.SyntheticEvent<HTMLImageElement>) => {\n              e.currentTarget.src = memory.metadata?.ogImage ?? memory.metadata?.twitterImage ?? '/placeholder.png';\n            }}\n          />\n        </>\n      );\n    }\n\n    // Handle other URLs with thumbnails\n    const thumbnail = memory.metadata?.ogImage ?? memory.metadata?.twitterImage;\n    if (thumbnail) {\n      return (\n        <>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n            {renderFavicon}\n            <Typography variant=\"subtitle1\">\n              {title}\n            </Typography>\n          </Box>\n          <Box\n            component=\"a\"\n            href={memory.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            sx={{ \n              display: 'block',\n              textDecoration: 'none',\n              color: 'inherit'\n            }}\n          >\n            <Box\n              component=\"img\"\n              src={thumbnail}\n              alt={memory.metadata?.title ?? 'Thumbnail'}\n              sx={{\n                width: '100%',\n                height: 'auto',\n                maxHeight: '300px',\n                objectFit: 'contain',\n                borderRadius: 1\n              }}\n              onError={(e: React.SyntheticEvent<HTMLImageElement>) => {\n                e.currentTarget.src = '/placeholder.png';\n              }}\n            />\n            <Typography variant=\"body2\" sx={{ mt: 1 }}>\n              {memory.metadata?.title ?? memory.url}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 0.5 }}>\n              {memory.metadata?.description ?? 'No description available'}\n            </Typography>\n          </Box>\n        </>\n      );\n    }\n\n    // Fallback for other content\n    return (\n      <>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n          {renderFavicon}\n          <Typography variant=\"subtitle1\">\n            {title}\n          </Typography>\n        </Box>\n        <Box\n          component=\"a\"\n          href={memory.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          sx={{ \n            display: 'block',\n            textDecoration: 'none',\n            color: 'inherit'\n          }}\n        >\n          <Typography variant=\"body1\">\n            {memory.metadata?.title ?? memory.url}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n            {memory.metadata?.description ?? 'No description available'}\n          </Typography>\n        </Box>\n      </>\n    );\n  };\n\n  return (\n    <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n      <CardContent sx={{ flexGrow: 1 }}>\n        {renderContent()}\n        <Box sx={{ mt: 2, display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n          {memory.tags?.map((tag) => (\n            <Chip\n              key={tag}\n              label={tag}\n              size=\"small\"\n              sx={{\n                backgroundColor: 'rgba(255, 87, 34, 0.1)',\n                color: '#ff5722',\n                '&:hover': {\n                  backgroundColor: 'rgba(255, 87, 34, 0.2)',\n                },\n              }}\n            />\n          ))}\n        </Box>\n        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 2, display: 'block' }}>\n          Created: {formatDate(memory.metadata?.createdAt)}\n        </Typography>\n      </CardContent>\n      <Box sx={{ justifyContent: 'space-between', px: 2, pb: 2 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <IconButton\n            onClick={() => handleVote('up')}\n            color={userVote === 'up' ? 'primary' : 'default'}\n          >\n            <ThumbUpIcon />\n          </IconButton>\n          <Typography>{memory.votes?.up || 0}</Typography>\n          <IconButton\n            onClick={() => handleVote('down')}\n            color={userVote === 'down' ? 'primary' : 'default'}\n          >\n            <ThumbDownIcon />\n          </IconButton>\n          <Typography>{memory.votes?.down || 0}</Typography>\n        </Box>\n      </Box>\n    </Card>\n  );\n};\n\nexport default MemoryCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}