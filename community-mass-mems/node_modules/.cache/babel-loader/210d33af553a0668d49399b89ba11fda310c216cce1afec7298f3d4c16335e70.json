{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\isman\\\\Documents\\\\community-mass-mems\\\\community-mass-mems\\\\src\\\\contexts\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext({\n  mode: 'light',\n  toggleTheme: () => {}\n});\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [mode, setMode] = useState(() => {\n    // Get saved theme from localStorage or use system preference\n    const savedMode = localStorage.getItem('theme-mode');\n    if (savedMode === 'light' || savedMode === 'dark') {\n      return savedMode;\n    }\n    // Check system preference\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  });\n  useEffect(() => {\n    localStorage.setItem('theme-mode', mode);\n  }, [mode]);\n  const toggleTheme = () => {\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      mode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"x1sZbrorv0VT76AgcoTWFy/wfsw=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","mode","toggleTheme","useTheme","_s","ThemeProvider","children","_s2","setMode","savedMode","localStorage","getItem","window","matchMedia","matches","setItem","prevMode","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Users/isman/Documents/community-mass-mems/community-mass-mems/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { PaletteMode } from '@mui/material';\n\ninterface ThemeContextType {\n  mode: PaletteMode;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType>({\n  mode: 'light',\n  toggleTheme: () => {},\n});\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [mode, setMode] = useState<PaletteMode>(() => {\n    // Get saved theme from localStorage or use system preference\n    const savedMode = localStorage.getItem('theme-mode');\n    if (savedMode === 'light' || savedMode === 'dark') {\n      return savedMode;\n    }\n    // Check system preference\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  });\n\n  useEffect(() => {\n    localStorage.setItem('theme-mode', mode);\n  }, [mode]);\n\n  const toggleTheme = () => {\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ mode, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ9E,MAAMC,YAAY,gBAAGN,aAAa,CAAmB;EACnDO,IAAI,EAAE,OAAO;EACbC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACK,YAAY,CAAC;AAAA;AAACI,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAsD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACtF,MAAM,CAACN,IAAI,EAAEO,OAAO,CAAC,GAAGZ,QAAQ,CAAc,MAAM;IAClD;IACA,MAAMa,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACpD,IAAIF,SAAS,KAAK,OAAO,IAAIA,SAAS,KAAK,MAAM,EAAE;MACjD,OAAOA,SAAS;IAClB;IACA;IACA,OAAOG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,GAAG,MAAM,GAAG,OAAO;EACrF,CAAC,CAAC;EAEFjB,SAAS,CAAC,MAAM;IACda,YAAY,CAACK,OAAO,CAAC,YAAY,EAAEd,IAAI,CAAC;EAC1C,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBM,OAAO,CAAEQ,QAAQ,IAAMA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EAClE,CAAC;EAED,oBACEjB,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEC;IAAY,CAAE;IAAAI,QAAA,EACjDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACf,GAAA,CAxBWF,aAAsD;AAAAkB,EAAA,GAAtDlB,aAAsD;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}